{"version":3,"sources":["index.js"],"names":["App","props","state","newItem","list","this","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,G,kBACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,QAAS,GACTC,KAAM,IAJK,E,iFAQfC,KAAKC,+BACLC,OAAOC,iBACH,eACAH,KAAKI,wBAAwBC,KAAKL,S,6CAItCE,OAAOI,oBACH,eACAN,KAAKI,wBAAwBC,KAAKL,OAEtCA,KAAKI,4B,qDAIL,IAAK,IAAIG,KAAOP,KAAKH,MACjB,GAAIW,aAAaC,eAAeF,GAAM,CAClC,IAAIG,EAAQF,aAAaG,QAAQJ,GACjC,IACIG,EAAQE,KAAKC,MAAMH,GACnBV,KAAKc,SAAL,eAAiBP,EAAMG,IACzB,MAAOK,GACLf,KAAKc,SAAL,eAAiBP,EAAMG,Q,gDAOnC,IAAK,IAAIH,KAAOP,KAAKH,MACjBW,aAAaQ,QAAQT,EAAKK,KAAKK,UAAUjB,KAAKH,MAAMU,O,kCAIhDA,EAAKG,GACbV,KAAKc,SAAL,eAAiBP,EAAMG,M,gCAIvB,IAAMZ,EAAU,CACZoB,GAAI,EAAIC,KAAKC,SACbV,MAAOV,KAAKH,MAAMC,QAAQuB,SAExBtB,EAAI,YAAOC,KAAKH,MAAME,MAE5BA,EAAKuB,KAAKxB,GAEVE,KAAKc,SAAS,CACVf,OACAD,QAAS,O,iCAINoB,GACP,IACMK,EADI,YAAOvB,KAAKH,MAAME,MACHyB,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KACpDlB,KAAKc,SAAS,CAAEf,KAAMwB,M,+BAEhB,IAAD,OACL,OACI,6BACI,yCACA,wBAAIG,UAAU,aAAd,iBAEA,yBAAKA,UAAU,aACX,4CAGV,6BACc,2BACIC,KAAK,OACLC,YAAY,sBACZlB,MAAOV,KAAKH,MAAMC,QAClB+B,SAAU,SAAAd,GAAC,OAAI,EAAKe,YAAY,UAAWf,EAAEgB,OAAOrB,UAExD,4BACIgB,UAAU,mBACVM,QAAS,kBAAM,EAAKC,WACpBC,UAAWlC,KAAKH,MAAMC,QAAQqC,QAE9B,sCAEJ,6BAjBJ,IAiBW,6BACP,4BACKnC,KAAKH,MAAME,KAAKqC,KAAI,SAAAX,GACjB,OACI,wBAAIlB,IAAKkB,EAAKP,IACTO,EAAKf,MACN,4BAAQsB,QAAS,kBAAM,EAAKK,WAAWZ,EAAKP,MAA5C,mB,GAjGtBoB,IAAMC,YA8GxBC,IAASC,OAAO,kBAAC9C,EAAD,MAAS+C,SAASC,eAAe,U","file":"static/js/main.09642f36.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newItem: \"\",\n            list: []\n        };\n    }\n    componentDidMount() {\n        this.hydrateStateWithLocalStorage();\n        window.addEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n        this.saveStateToLocalStorage();\n    }\n\n    hydrateStateWithLocalStorage() {\n        for (let key in this.state) {\n            if (localStorage.hasOwnProperty(key)) {\n                let value = localStorage.getItem(key);\n                try {\n                    value = JSON.parse(value);\n                    this.setState({ [key]: value });\n                } catch (e) {\n                    this.setState({ [key]: value });\n                }\n            }\n        }\n    }\n\n    saveStateToLocalStorage() {\n        for (let key in this.state) {\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    }\n\n    updateInput(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    addItem() {\n        const newItem = {\n            id: 1 + Math.random(),\n            value: this.state.newItem.slice()\n        };\n        const list = [...this.state.list];\n\n        list.push(newItem);\n\n        this.setState({\n            list,\n            newItem: \"\"\n        });\n    }\n\n    deleteItem(id) {\n        const list = [...this.state.list];\n        const updatedList = list.filter(item => item.id !== id);\n        this.setState({ list: updatedList });\n    }\n    render() {\n        return (\n            <div>\n                <h1>SpaceRexx</h1>\n                <h3 className=\"app-title\"> Packing List</h3>\n\n                <div className=\"container\">\n                    <div>\n                    \n                        Add an Item:\n          <br />\n                        <input\n                            type=\"text\"\n                            placeholder=\"It's a long trip...\"\n                            value={this.state.newItem}\n                            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n                        />\n                        <button\n                            className=\"add-btn btn-flat\"\n                            onClick={() => this.addItem()}\n                            disabled={!this.state.newItem.length}\n                        >\n                            <i>Ruff! </i>\n                        </button>\n                        <br /> <br />\n                        <ul>\n                            {this.state.list.map(item => {\n                                return (\n                                    <li key={item.id}>\n                                        {item.value}\n                                        <button onClick={() => this.deleteItem(item.id)}>\n                                        [x]\n                                        </button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}